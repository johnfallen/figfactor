<cffunction name="getCreateDate" access="public" returntype="date" default="date" hint="Accessor for property CreateDate" output="false">
<cfscript>
return getTransferObject().getCreateDate(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setCreateDate" access="public" returntype="void" default="void" hint="Mutator for property CreateDate" output="false">
<cfargument name="CreateDate" type="date" required="true" hint="The value to set CreateDate to">
<cfscript>
getTransferObject().setCreateDate(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setModifyDate" access="public" returntype="void" default="void" hint="Mutator for property ModifyDate" output="false">
<cfargument name="ModifyDate" type="date" required="true" hint="The value to set ModifyDate to">
<cfscript>
getTransferObject().setModifyDate(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getParentType" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Access for parent media.Media" output="false">
<cfscript>
return getTransferObject().getParentType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsPersisted" access="public" returntype="boolean" default="boolean" hint="If this object is stored in the database" output="false">
<cfscript>
return getTransferObject().getIsPersisted(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsDirty" access="public" returntype="boolean" default="boolean" hint="If this object's data is differnt from that stored in the DB." output="false">
<cfscript>
return getTransferObject().getIsDirty(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getMediaPropertyXML" access="public" returntype="string" default="string" hint="Accessor for property MediaPropertyXML" output="false">
<cfscript>
return getTransferObject().getMediaPropertyXML(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getDescription" access="public" returntype="string" default="string" hint="Accessor for property Description" output="false">
<cfscript>
return getTransferObject().getDescription(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="init" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Constructor for Transfer class media.Media" output="false">
<cfargument name="transfer" type="transfer.com.Transfer" required="true" hint="The Transfer library">
<cfargument name="utility" type="transfer.com.util.Utility" required="true" hint="The Utility object">
<cfargument name="nullable" type="transfer.com.sql.Nullable" required="true" hint="The Nullable lookup object">
<cfargument name="thisObject" type="transfer.com.TransferObject" required="true" hint="What is determined to be the base 'this' object for this TransferObject">
<cfscript>
return getTransferObject().init(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIDMedia" access="public" returntype="numeric" default="numeric" hint="Accessor for property IDMedia" output="false">
<cfscript>
return getTransferObject().getIDMedia(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="equalsTransfer" access="public" returntype="boolean" default="boolean" hint="If an object is persisted, returns true if they are of the same class and same id. If not, returns true if they are the same object." output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The TransferObject to test against">
<cfscript>
return getTransferObject().equalsTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getParentUserMemento" access="public" returntype="struct" default="struct" hint="returns the memento for the parent onetomany user.User" output="false">
<cfscript>
return getTransferObject().getParentUserMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setParentUserMemento" access="public" returntype="void" default="void" hint="set the state of composition parent onetomany 'ParentUser'" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfargument name="retrieveParent" type="boolean" required="false" hint="Whether or not to force retrieval of the parent" default="true">
<cfscript>
getTransferObject().setParentUserMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getParentTypeMemento" access="public" returntype="struct" default="struct" hint="returns the memento for the parent onetomany type.Type" output="false">
<cfscript>
return getTransferObject().getParentTypeMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setTItle" access="public" returntype="void" default="void" hint="Mutator for property TItle" output="false">
<cfargument name="TItle" type="string" required="true" hint="The value to set TItle to">
<cfscript>
getTransferObject().setTItle(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setIDMedia" access="public" returntype="void" default="void" hint="Mutator for property IDMedia" output="false">
<cfargument name="IDMedia" type="numeric" required="true" hint="The value to set IDMedia to">
<cfscript>
getTransferObject().setIDMedia(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getOriginalTransferObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns this object" output="false">
<cfscript>
return getTransferObject().getOriginalTransferObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setIconFileName" access="public" returntype="void" default="void" hint="Mutator for property IconFileName" output="false">
<cfargument name="IconFileName" type="string" required="true" hint="The value to set IconFileName to">
<cfscript>
getTransferObject().setIconFileName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setFileName" access="public" returntype="void" default="void" hint="Mutator for property FileName" output="false">
<cfargument name="FileName" type="string" required="true" hint="The value to set FileName to">
<cfscript>
getTransferObject().setFileName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="containsKeyword" access="public" returntype="boolean" default="boolean" hint="If this array contains a particular instance of keyword.Keyword" output="false">
<cfargument name="object" type="transfer.com.TransferObject" required="true" hint="The object to look for">
<cfargument name="pkCheckOnly" type="boolean" required="false" hint="Expert/Transfer use only: only checks primary keys" default="false">
<cfscript>
return getTransferObject().containsKeyword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getKeywordisLoaded" access="public" returntype="boolean" default="boolean" hint="Whether or not the composition 'Keyword' has been loaded yet" output="false">
<cfscript>
return getTransferObject().getKeywordisLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="copyValuesTo" access="public" returntype="void" default="void" hint="Copies the values of this object to one of the same class" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="The object to copy values to">
<cfscript>
getTransferObject().copyValuesTo(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsClone" access="public" returntype="boolean" default="boolean" hint="If this object is a clone or not" output="false">
<cfscript>
return getTransferObject().getIsClone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setMemento" access="public" returntype="void" default="void" hint="set the state of this object from a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getExternalURL" access="public" returntype="string" default="string" hint="Accessor for property ExternalURL" output="false">
<cfscript>
return getTransferObject().getExternalURL(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getKeyword" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns the keyword.Keyword object at the given index in the array" output="false">
<cfargument name="index" type="numeric" required="true" hint="The index in the array to retrieve">
<cfscript>
return getTransferObject().getKeyword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="clone" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Get a deep clone of this object" output="false">
<cfscript>
return getTransferObject().clone(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="removeParentUser" access="public" returntype="void" default="void" hint="Remove the parent media.Media from this object" output="false">
<cfscript>
getTransferObject().removeParentUser(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getPropertyMemento" access="public" returntype="struct" default="struct" hint="returns the memento for properties" output="false">
<cfscript>
return getTransferObject().getPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getKeywordMemento" access="public" returntype="array" default="array" hint="returns the memento for the onetomany Keyword" output="false">
<cfscript>
return getTransferObject().getKeywordMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getClassName" access="public" returntype="string" default="string" hint="The class name of the TransferObject" output="false">
<cfscript>
return getTransferObject().getClassName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getLoadedObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns itself, as there is no object to load" output="false">
<cfscript>
return getTransferObject().getLoadedObject(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setPreviewFileName" access="public" returntype="void" default="void" hint="Mutator for property PreviewFileName" output="false">
<cfargument name="PreviewFileName" type="string" required="true" hint="The value to set PreviewFileName to">
<cfscript>
getTransferObject().setPreviewFileName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterUpdateTransferEvent" access="public" returntype="void" default="void" hint="Observer method action for when updates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterUpdateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getTItle" access="public" returntype="string" default="string" hint="Accessor for property TItle" output="false">
<cfscript>
return getTransferObject().getTItle(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getModifyDate" access="public" returntype="date" default="date" hint="Accessor for property ModifyDate" output="false">
<cfscript>
return getTransferObject().getModifyDate(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setSystemLocation" access="public" returntype="void" default="void" hint="Mutator for property SystemLocation" output="false">
<cfargument name="SystemLocation" type="string" required="true" hint="The value to set SystemLocation to">
<cfscript>
getTransferObject().setSystemLocation(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getFileName" access="public" returntype="string" default="string" hint="Accessor for property FileName" output="false">
<cfscript>
return getTransferObject().getFileName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setParentUser" access="public" returntype="void" default="void" hint="Mutator for parent media.Media" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="the object to set as parent">
<cfargument name="loadChildren" type="boolean" required="false" hint="Expert/Transfer use only: whether or not to load the children." default="true">
<cfargument name="loadingFromMemento" type="boolean" required="false" hint="Expert/Transfer use only: if this is loading from a memento or not" default="false">
<cfscript>
getTransferObject().setParentUser(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="emptyKeyword" access="public" returntype="void" default="void" hint="empty the collection, with no change to loading'" output="false">
<cfscript>
getTransferObject().emptyKeyword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getParentUserisLoaded" access="public" returntype="boolean" default="boolean" hint="Whether or not the composition 'ParentUser' has been loaded yet" output="false">
<cfscript>
return getTransferObject().getParentUserisLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsProxy" access="public" returntype="boolean" default="boolean" hint="returns whether or not this is a proxy object. Since this is a TrasferObject, it returns false." output="false">
<cfscript>
return getTransferObject().getIsProxy(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setDescription" access="public" returntype="void" default="void" hint="Mutator for property Description" output="false">
<cfargument name="Description" type="string" required="true" hint="The value to set Description to">
<cfscript>
getTransferObject().setDescription(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getSystemLocation" access="public" returntype="string" default="string" hint="Accessor for property SystemLocation" output="false">
<cfscript>
return getTransferObject().getSystemLocation(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="hasParentUser" access="public" returntype="boolean" default="boolean" hint="Whether or not this object has a parent media.Media" output="false">
<cfscript>
return getTransferObject().hasParentUser(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getPreviewFileName" access="public" returntype="string" default="string" hint="Accessor for property PreviewFileName" output="false">
<cfscript>
return getTransferObject().getPreviewFileName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getKeywordIterator" access="public" returntype="any" default="any" hint="return a java.util.Iterator of keyword.Keyword objects" output="false">
<cfscript>
return getTransferObject().getKeywordIterator(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setParentType" access="public" returntype="void" default="void" hint="Mutator for parent media.Media" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" hint="the object to set as parent">
<cfargument name="loadChildren" type="boolean" required="false" hint="Expert/Transfer use only: whether or not to load the children." default="true">
<cfargument name="loadingFromMemento" type="boolean" required="false" hint="Expert/Transfer use only: if this is loading from a memento or not" default="false">
<cfscript>
getTransferObject().setParentType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setPropertyMemento" access="public" returntype="void" default="void" hint="set the Property state of this object with a memento" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setPropertyMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="sameTransfer" access="public" returntype="boolean" default="boolean" hint="Checks to see if 2 transfer objects are the same" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="Yes" hint="The transfer object to check if we are equal">
<cfscript>
return getTransferObject().sameTransfer(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDeleteTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when deletes occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDeleteTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getKeywordArray" access="public" returntype="array" default="array" hint="returns the entire array of keyword.Keyword" output="false">
<cfscript>
return getTransferObject().getKeywordArray(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterCreateTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when creates occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterCreateTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getMemento" access="public" returntype="struct" default="struct" hint="Returns the memento for all non-lazy members of this object" output="false">
<cfscript>
return getTransferObject().getMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="removeParentType" access="public" returntype="void" default="void" hint="Remove the parent media.Media from this object" output="false">
<cfscript>
getTransferObject().removeParentType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIsLoaded" access="public" returntype="boolean" default="boolean" hint="easy way to determine if the data is loaded, since this is a TransferObject, it must be loaded, and therefore returns true." output="false">
<cfscript>
return getTransferObject().getIsLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setMediaPropertyXML" access="public" returntype="void" default="void" hint="Mutator for property MediaPropertyXML" output="false">
<cfargument name="MediaPropertyXML" type="string" required="true" hint="The value to set MediaPropertyXML to">
<cfscript>
getTransferObject().setMediaPropertyXML(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setExternalURL" access="public" returntype="void" default="void" hint="Mutator for property ExternalURL" output="false">
<cfargument name="ExternalURL" type="string" required="true" hint="The value to set ExternalURL to">
<cfscript>
getTransferObject().setExternalURL(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setAvaiable" access="public" returntype="void" default="void" hint="Mutator for property Avaiable" output="false">
<cfargument name="Avaiable" type="numeric" required="true" hint="The value to set Avaiable to">
<cfscript>
getTransferObject().setAvaiable(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getAvaiable" access="public" returntype="numeric" default="numeric" hint="Accessor for property Avaiable" output="false">
<cfscript>
return getTransferObject().getAvaiable(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="findKeyword" access="public" returntype="numeric" default="numeric" hint="Find the index number that the given object is at in the Array. Returns -1 if it can't be found.'" output="false">
<cfargument name="object" type="transfer.com.TransferObject" required="true" hint="The object to search for">
<cfscript>
return getTransferObject().findKeyword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="actionAfterDiscardTransferEvent" access="public" returntype="void" default="void" hint="Observer action method for when discards occur" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" hint="The Transfer Event Object">
<cfscript>
getTransferObject().actionAfterDiscardTransferEvent(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getParentTypeisLoaded" access="public" returntype="boolean" default="boolean" hint="Whether or not the composition 'ParentType' has been loaded yet" output="false">
<cfscript>
return getTransferObject().getParentTypeisLoaded(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="hasParentType" access="public" returntype="boolean" default="boolean" hint="Whether or not this object has a parent media.Media" output="false">
<cfscript>
return getTransferObject().hasParentType(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getParentUser" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Access for parent media.Media" output="false">
<cfscript>
return getTransferObject().getParentUser(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setKeywordMemento" access="public" returntype="void" default="void" hint="set the state of composition onetomany 'Keyword'" output="false">
<cfargument name="memento" type="array" required="true" hint="the memento to set the state with">
<cfscript>
getTransferObject().setKeywordMemento(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="getIconFileName" access="public" returntype="string" default="string" hint="Accessor for property IconFileName" output="false">
<cfscript>
return getTransferObject().getIconFileName(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="sortKeyword" access="public" returntype="void" default="void" hint="Sort all elements in the array Keyword" output="false">
<cfscript>
getTransferObject().sortKeyword(argumentCollection=arguments);</cfscript>
</cffunction>

<cffunction name="setParentTypeMemento" access="public" returntype="void" default="void" hint="set the state of composition parent onetomany 'ParentType'" output="false">
<cfargument name="memento" type="struct" required="true" hint="the memento to set the state with">
<cfargument name="retrieveParent" type="boolean" required="false" hint="Whether or not to force retrieval of the parent" default="true">
<cfscript>
getTransferObject().setParentTypeMemento(argumentCollection=arguments);</cfscript>
</cffunction>


